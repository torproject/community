_model: page
---
color: primary
---
title: CentOS / RHEL
---
body:

### 1. Enable Automatic Software Updates

One of the most important things to keeps your relay secure is to install security updates timely and ideally automatically so you can not forget about it. Follow the instructions to enable [automatic software updates](updates) for your operating system.

### 2. Install `epel-release`

To install the `tor` package on CentOS/RHEL, you need to enable the use of the [EPEL](https://fedoraproject.org/wiki/EPEL) Repository first. To do so, you must install the `epel-release` package:

```
# yum install epel-release
```

Recent versions of CentOS/RHEL are using `dnf` instead of `yum`:

```
# dnf install epel-release
```

If you are on a recent version that uses `dnf`, please keep using it for the following steps where `yum` is called on this setup guide.

### 3. Configure Tor Project's Repository

Configuring the Tor Project's Repository for CentOS/RHEL consists basically on setting up `/etc/yum.repos.d/Tor.repo` with the following content:

```
[tor]
name=Tor for Enterprise Linux $releasever - $basearch
baseurl=https://rpm.torproject.org/centos/$releasever/$basearch
enabled=1
gpgcheck=1
gpgkey=https://rpm.torproject.org/centos/public_gpg.key
cost=100
```

More information about it can be found [here](https://support.torproject.org/rpm/).

### 4. Install `tor`

Once you are set with EPEL and the Tor repositories, you are now able to install the package:

```
# yum install tor
```

Please note that when you are installing the first package from the EPEL repository you will be asked about verifying the EPEL's GPG signing key. Please ensure the key matches with the one available on the [Fedora Project website](https://getfedora.org/keys/). This will also happens when installing packages from Tor's repository for the first time - again you must ensure the key matches.

### 5. Install a Pluggable Transport

We are opting here to install and use `obfs4` as pluggable transport, so we are going to install `obfs4proxy`.

Sadly there's no package repository or a **.rpm** binary we can use to install it on CentOS/RHEL. We must build it from source.

Here we install the dependencies we need to build the binary:

```
# yum install git golang policycoreutils-python-utils
```

Now we start building the binary, and copy it to a proper directory used by system's **$PATH**:

```
# mktemp -d
/tmp/tmp.yR56oSmy
# export GOPATH=/tmp/tmp.yR56oSmy
# go get gitlab.com/yawning/obfs4.git/obfs4proxy
# cp $GOPATH/bin/obfs4proxy /usr/local/bin/.
# chcon --reference=/usr/bin/tor /usr/local/bin/obfs4proxy
```

Heavily outdated versions of `git` can make `go get` fail, so try upgrading to a more recent version of `git` if you're running into this problem.

For more information on installing or building `obfs4proxy` from source, please refer to its [official docummentation](https://gitlab.com/yawning/obfs4/-/blob/master/README.md).

### 6. Configure `/etc/tor/torrc`

This is a very simple version of the `torrc` configuration file in order to run a Bridge on the Tor network:

```
Nickname    myNiceBridge # Change "myNiceBridge" to something you like
ContactInfo your@e-mail  # Write your e-mail and be aware it will be published
ORPort      443          # You might use a different port, should you want to
ExitRelay   0
SocksPort   0
BridgeRelay 1
ExtORPort   auto
Log notice  syslog
ServerTransportPlugin     obfs4 exec /usr/local/bin/obfs4proxy
ServerTransportListenAddr obfs4 0.0.0.0:CHANGEME
```

Replace "CHANGEME" with a port of your choice.

This port must be externally reachable and must be different from the one specified for **ORPort**. Please avoid port 9001 because it's commonly associated with Tor and censors may be scanning the Internet for this port.

  * One pretty important test you should consider doing is to test if we can talk **obfs4** to the port used by **ServerTransportListenAddr**. Please try our [reachability test tool for obfs4 Bridges](https://bridges.torproject.org/scan/) to check that.

### 7. Enable and Start `tor`

Recent versions os CentOS/RHEL which ship with systemd:

```
# systemctl enable --now tor
```
    ... or restart it if it was running already, so configurations take effect

```
# systemctl restart tor
```

Should you use an older release like CentOS/RHEL 6, that will be:

```
# service tor enable
# service tor start
```

  * If **systemd** or `tor` complain about starting `obfs4proxy` by binding its socket to ports lower than 1024, you shall consider changing its binary's cappabilities or overriding Tor's unit. For detailed information please refer to our documentation on [GitLab Ticket #18356](https://gitlab.torproject.org/tpo/core/tor/-/issues/18356).

### 8. Final Notes

If you are having trouble setting up your bridge, have a look at [our help section](../../../getting-help/).
If your bridge is now running, check out the [post-install notes](../post-install/).
---
html: two-columns-page.html
---
key: 1
---
subtitle: How to deploy a Bridge with obfs4 on CentOS/RHEL
---
_template: layout.html
---
section: bridge
---
section_id: bridge
