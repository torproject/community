_model: page
---
color: primary
---
title: FreeBSD
---
html: two-columns-page.html
---
key: 6
---
body:

### 1. Enable Automatic Software Updates

One of the most important things to keeps your relay secure is to install security updates timely and ideally automatically so you can not forget about it. Follow the instructions to enable automatic software updates for your operating system.

### 2. Bootstrap `pkg`

This article assumes we have already a base installation of FreeBSD running, and only the base system (here, we are running 12.2-RELEASE).
That means we do not have any packages installed, or even the `pkg` packages manager itself (there's no `sudo` available - we are running commands as root).

To bootstrap and install `pkg` we should run the following command:

```
# pkg bootstrap
# pkg update -f
```

##### 2.1. Recommended Steps to Setup `pkg`

To follow upstream updates in a "faster way" we recommend changing the 'quarterly' branch used by `pkg` to its 'latest' branch.

One additional step is to prefer using HTTPS to fetch our packages, and updates - so here we also need an extra package to help us out (ca_root_nss).

Installing the `ca_root_nss` package:

```
# pkg install ca_root_nss
```

We are keeping the original setting used by `pkg` but setting a new one that will override it. So we set up a new directory, and then create a configuration file to override what we need. This configuration file will be `/usr/local/etc/pkg/repos/FreeBSD.conf`.

Creating the new directory:

```
# mkdir -p /usr/local/etc/pkg/repos
```

This is how the new configuration file `/usr/local/etc/pkg/repos/FreeBSD.conf` must look like:

```
FreeBSD: {
  url: pkg+https://pkg.freebsd.org/${ABI}/latest
}
```

After applying all these changes, we update the packages list again and try to check if there's already a new update to apply:

```
# pkg update -f
# pkg upgrade -y -f
```

### 3. Install `tor` FreeBSD's Package

Here we can choose to install the latest stable version, like:

```
# pkg install tor
```

  ... or install an alpha release:


```
# pkg install tor-devel
```

### 4. Install a Pluggable Transport

We are opting here to install and use **obfs4** as pluggable transport, so we are going to install the `obfs4proxy-tor` package:

```
# pkg install obfs4proxy-tor
```

### 5. Configure `/usr/local/etc/tor/torrc`

This is a very simple version of the `torrc` configuration file in order to run a Bridge on the Tor network:

```
Nickname    myNiceBridge # Change "myNiceBridge" to something you like
ContactInfo your@e-mail  # Write your e-mail and be aware it will be published
ORPort      443          # You might use a different port, should you want to
ExitRelay   0
SocksPort   0
BridgeRelay 1
ExtORPort   auto
Log notice  syslog
ServerTransportPlugin     obfs4 exec /usr/local/bin/obfs4proxy
ServerTransportListenAddr obfs4 0.0.0.0:CHANGEME
```

Replace "CHANGEME" with a port of your choice.

This port must be externally reachable and must be different from the one specified for ORPort. Please avoid port 9001 because it's commonly associated with Tor and censors may be scanning the Internet for this port.

  * One pretty important test you should consider doing is to test if we can talk **obfs4** to the port used by **ServerTransportListenAddr**. Please try our [reachability test tool for obfs4 Bridges](https://bridges.torproject.org/scan/) to check that.

### 6. Enable `net.inet.ip.random_id`

```
# echo "net.inet.ip.random_id=1" >> /etc/sysctl.conf
# sysctl net.inet.ip.random_id=1
```

### 7. Start `tor`

Here we set `tor` to start at boot time and use the setuid feature, in order to bind to lower ports like 443 (the daemon itself will still run as a regular non-privileged user).

```
# sysrc tor_setuid=YES
# sysrc tor_enable=YES
# service tor start
```

# 8. Final Notes

If you are having trouble setting up your bridge, have a look at [our help section](../../../getting-help/).
If your bridge is now running, check out the [post-install notes](../post-install/).
---
subtitle: How to deploy an obfs4 bridge on FreeBSD
---
section: Bridge
---
section_id: bridge
